@page "/admin-login"

@using Orderino.Repository;
@using Orderino.Repository.Models;

@inject Repository<LoginInfo> loginInfoRepository
@inject NavigationManager navigationManager


<section class="vh-100 gradient-custom">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card bg-dark text-white" style="border-radius: 1rem;">
                    <div class="card-body p-5 text-center">

                        <div class="mb-md-5 mt-md-4 pb-5">

                            <h2 class="fw-bold mb-2 text-uppercase">Orderino</h2>
                            <p class="text-white-50 mb-5">Administrate your restaurants!</p>

                            <div class="form-outline form-white mb-4">
                                <input type="email" id="typeEmailX" class="form-control form-control-lg" placeholder="Email" @bind="username"/>
                            </div>

                            <div class="form-outline form-white mb-4">
                                <input type="password" id="typePasswordX" class="form-control form-control-lg" placeholder="Password" @bind="password"/>
                            </div>

                            <p class="small mb-5 pb-lg-2"><a class="text-white-50" href="#!">Forgot password?</a></p>

                            <button class="btn btn-outline-light btn-lg px-5" type="submit" @onclick="Authenticate">Login</button>

                        </div>
                        <div>
                            <p class="mb-0">Don't have an account? <a href="#!" class="text-white-50 fw-bold">Get in touch</a></p>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@code {

    private string username;
    private string password;

    private async Task Authenticate()
    {
        LoginInfo loginInfo = await loginInfoRepository.QueryItemAsync(username);

        if (loginInfo == null)
            return;

        if (loginInfo.Password != password)
            return;

        loginInfo.Token = Guid.NewGuid().ToString();
        loginInfo.TokenExpiration = DateTime.UtcNow.AddDays(1);

        await loginInfoRepository.Update(loginInfo);
        navigationManager.NavigateTo($"/admin-restaurants/{loginInfo.Token}");
    }
}
