@page "/restaurant-browser/{orderId}/{userId}"

@using Orderino.Repository;
@using Orderino.Repository.Models;
@using Orderino.Utils;
@using Microsoft.AspNetCore.WebUtilities;
@using Microsoft.Extensions.Primitives; 

@inject Repository<Restaurant> restaurantRepository
@inject Repository<User> userRepositry
@inject NavigationManager navigationManager
@inject SessionCache sessionCache 


<div class="container-background">
    <div class="restaurants-container">
        @foreach (var restaurant in restaurants)
        {
            <div class="restaurant-banner">
                <div style="border-color: #594ae2; border-width: thick; border-style: solid; width: 100%; height: 100%; border-radius: 8px;">
                    <img src="@GetBannerImage(restaurant.BannerString)" class="restaurant-banner-photo" @onclick="() => OpenRestaurant(restaurant)">
                </div>                
                <div class="restaurant-text" @onclick="() => OpenRestaurant(restaurant)">
                     @restaurant.Name
                </div>
            </div>
        }
    </div>
</div>


@code {

    [Parameter]
    public string userId { get; set; }

    [Parameter]
    public string orderId { get; set; }

    List<Restaurant> restaurants = new List<Restaurant>();
    User user;

    protected override async Task OnInitializedAsync()
    {
        user = await userRepositry.QueryItemAsync(userId);
        sessionCache.Add(userId, user);
    }

    protected override async Task OnParametersSetAsync()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        QueryHelpers.ParseQuery(uri.Query).TryGetValue("search", out StringValues search);

        if (string.IsNullOrWhiteSpace(search))
        {
            restaurants = await restaurantRepository.QueryAllItemsAsync();
        }
        else
        {
            restaurants = await restaurantRepository.QueryByNameSearch(search);
        }
    }

    private void OpenRestaurant(Restaurant restaurant)
    {
        sessionCache.Add(restaurant.Id, restaurant);

        string route = $"/restaurant/{orderId}/{restaurant.Id}/{userId}";
        navigationManager.NavigateTo(route);
    }

    private string GetBannerImage(string bannerString)
    {
        return string.Format("{0}", bannerString);
    }
}
